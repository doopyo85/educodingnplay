<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entry Workspace</title>

    <!-- Entry CSS -->
    <link href="/js/entry/entry.css" rel="stylesheet" />
    
    <!-- 의존성 라이브러리들 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/preloadjs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/easeljs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/soundjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    
    <!-- 의존성 네임스페이스 정의 -->
    <script>
        // EntryTool 정의
        window.EntryTool = {};
        
        // EntryVideoLegacy 정의
        window.EntryVideoLegacy = {};
        
        // EntryPaint 정의
        window.EntryPaint = {};
        
        // EntrySoundEditor 정의
        window.EntrySoundEditor = {};
    </script>
    
    <!-- Entry Tool 먼저 로드 -->
    <script src="/js/entry/entry-tool.js"></script>
    
    <style>
        html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        #workspace {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <div id="workspace"></div>
    
    <!-- Entry 마지막에 로드 -->
    <script src="/js/entry/entry.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Entry가 로드될 때까지 대기
            const checkInterval = setInterval(() => {
                if (typeof window.Entry !== 'undefined') {
                    clearInterval(checkInterval);
                    console.log('Entry is loaded');
                    setupEntry();
                }
            }, 100);
            
            function setupEntry() {
                try {
                    // 프로젝트 파일 확인
                    const projectFile = '<%= projectFile %>';
                    console.log('Project file:', projectFile);
                    
                    // EntryJS가 노출하는 인터페이스 확인
                    console.log('Entry type:', typeof Entry);
                    console.log('Entry methods:', Object.keys(Entry));
                    
                    // 임시 Entry 객체 생성
                    if (typeof Entry === 'object') {
                        if (Entry.playground) {
                            console.log('Initializing Entry playground');
                            Entry.enableForceMouseMove = true;
                            
                            // 프로젝트 파일이 있으면 로드 시도
                            if (projectFile) {
                                fetch(projectFile)
                                    .then(r => r.json())
                                    .then(project => {
                                        console.log('Project loaded, trying to load into Entry');
                                        if (typeof Entry.loadProject === 'function') {
                                            Entry.loadProject(project);
                                        } else {
                                            console.error('Entry.loadProject is not available');
                                        }
                                    })
                                    .catch(err => console.error('Failed to load project:', err));
                            }
                        } else {
                            console.log('Entry playground not available');
                        }
                    } else {
                        console.error('Entry is not an object or not available');
                    }
                } catch (error) {
                    console.error('Entry setup error:', error);
                }
            }
        });
    </script>
</body>
</html>