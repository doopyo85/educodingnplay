<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entry Editor</title>

    <!-- Style sheets -->
    <link href="/js/entry/entry.css" rel="stylesheet" />
    <link href="/js/entry/entry-tool.css" rel="stylesheet" />

    <!-- Base dependencies -->
    <script src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/preloadjs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/easeljs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/soundjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <!-- Entry namespace initialization -->
    <script>
        // Entry와 EntryStatic을 전역으로 정의
        window.Entry = {
            initialize: function() {
                return new Promise((resolve) => {
                    // Entry 초기화 완료 후 호출
                    window.entryscript_loaded = function() {
                        resolve();
                    };
                });
            }
        };

        window.EntryStatic = {
            fontFamily: "NanumGothic",
            objectTypes: {},
            fonts: [],
            colorSet: {},
            initOptions: {
                type: 'workspace',
                textCodingEnable: true,
                defaultProject: true
            }
        };

        window.Lang = {
            Blocks: {},
            Workspace: {},
            Menus: {}
        };

        window.EntryTool = {};
        window.EntryPaint = {};
        window.EntrySoundEditor = {};
        window.EntryVideoLegacy = {};
    </script>

    <!-- Entry components -->
    <script src="/js/entry/entry-tool.js"></script>
    <script src="/js/entry/entry.js" onload="window.entryscript_loaded()"></script>

    <style>
        html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        #playground {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }
    </style>
</head>
<body>
    <div id="playground">
        <div id="workspace"></div>
        <div id="board"></div>
        <div id="updateHelper"></div>
        <div id="engineContainer"></div>
        <div id="dataTable"></div>
        <div id="pictureView"></div>
        <div id="soundEditor"></div>
    </div>

    <script>
        window.Entry.initialize().then(() => {
            try {
                console.log('Entry initialization starting...');
                
                // playground 모드로 초기화
                const initOption = {
                    type: 'playground',
                    containerId: 'playground',
                    textCodingEnable: true,
                    defaultProject: true
                };

                // Entry 초기화
                Entry.init(initOption);

                // 프로젝트 파일이 있는 경우 로드
                const projectFile = '<%= projectFile %>';
                if (projectFile) {
                    fetch(projectFile)
                        .then(response => response.json())
                        .then(project => {
                            Entry.loadProject(project);
                        })
                        .catch(error => {
                            console.error('프로젝트 로드 실패:', error);
                        });
                } else {
                    Entry.loadProject();
                }

                // Entry 시작
                Entry.start();
                console.log('Entry initialization completed');
            } catch (error) {
                console.error('Entry 초기화 오류:', error);
                console.error('Error stack:', error.stack);
                console.error('Entry object state:', window.Entry);
            }
        });
    </script>
</body>
</html>