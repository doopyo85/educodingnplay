<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entry Editor</title>

    <!-- Style sheets -->
    <link href="/js/entry/entry.css" rel="stylesheet" />
    <link href="/js/entry/entry-tool.css" rel="stylesheet" />

    <!-- Base dependencies -->
    <script src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/preloadjs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/easeljs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/soundjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <!-- Entry components -->
    <script src="/js/entry/entry-tool.js"></script>

    <style>
        html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        #workspace {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: #fff;
        }
    </style>
</head>
<body>
    <div id="workspace">
        <!-- 기본 엔트리 구조 -->
        <div class="containerWrapper">
            <div class="container">
                <!-- 왼쪽 패널 -->
                <div class="leftArea">
                    <div id="selectedObjectType"></div>
                    <div id="objectList"></div>
                    <div id="propertyPanel"></div>
                </div>
                
                <!-- 중앙 영역 -->
                <div class="centerArea">
                    <div id="board">
                        <div id="stage"></div>
                        <div id="engineContainer"></div>
                        <div id="canvasWrapper"></div>
                    </div>
                    <div id="buttonWrapper">
                        <div id="defaultButtons"></div>
                        <div id="customButtons"></div>
                    </div>
                </div>
                
                <!-- 오른쪽 패널 -->
                <div class="rightArea">
                    <div id="blocks"></div>
                    <div id="variables"></div>
                </div>
            </div>
        </div>

        <!-- 팝업 및 특수 컨테이너 -->
        <div id="modalWindow"></div>
        <div id="expertWindow"></div>
        <div id="dataTable"></div>
        <div id="pictureView"></div>
        <div id="soundEditor"></div>
        <div id="hardwareWindow"></div>
    </div>

    <!-- Entry.js는 body 끝에서 로드 -->
    <script src="/js/entry/entry.js"></script>

    <script>
        $(document).ready(function() {
            // DOMContentLoaded 이후에 Entry가 로드될 때까지 대기
            const checkEntry = setInterval(() => {
                if (typeof Entry !== 'undefined') {
                    clearInterval(checkEntry);
                    initializeEntry();
                }
            }, 100);

            function initializeEntry() {
                try {
                    console.log('Entry 초기화 시작');
                    
                    // 기본 옵션
                    const initOption = {
                        type: 'workspace',
                        container: 'workspace',
                        textCodingEnable: true,
                        baseUrl: '<%= baseUrl %>'
                    };
                    
                    // Entry 초기화
                    Entry.init(initOption);

                    // 프로젝트 파일이 있는 경우 로드
                    const projectFile = '<%= projectFile %>';
                    if (projectFile) {
                        fetch(projectFile)
                            .then(response => response.json())
                            .then(project => {
                                Entry.loadProject(project);
                            })
                            .catch(error => {
                                console.error('프로젝트 로드 실패:', error);
                            });
                    } else {
                        Entry.loadProject();
                    }

                    // Entry 시작
                    Entry.start();
                    console.log('Entry 초기화 완료');
                } catch (error) {
                    console.error('Entry 초기화 오류:', error);
                    console.error('Error stack:', error.stack);
                }
            }
        });
    </script>
</body>
</html>