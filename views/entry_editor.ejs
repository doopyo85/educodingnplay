<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entry Editor</title>

    <!-- Entry CSS -->
    <link href="/js/entry/entry.css" rel="stylesheet" />
    <link href="/js/entry/entry-tool.css" rel="stylesheet" />

    <!-- 의존성 라이브러리들 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/preloadjs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/easeljs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/soundjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>

    <!-- 네임스페이스 초기화 -->
    <script>
        // Lang 네임스페이스
        var Lang = {
            Blocks: {},
            Workspace: {},
            Menus: {}
        };

        // EntryStatic 네임스페이스
        var EntryStatic = {
            fontFamily: "NanumGothic",
            initOptions: {
                type: 'workspace',
                textCodingEnable: true,
                basketNum: 10,
                baseUrl: '<%= baseUrl %>',
            }
        };

        // EntryTool 네임스페이스
        window.EntryTool = {};
    </script>

    <!-- Entry Tool 및 Entry -->
    <script src="/js/entry/entry-tool.js"></script>
    <script src="/js/entry/entry.js"></script>

    <style>
        html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        #workspace {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: #fff;
        }
    </style>
</head>
<body>
    <div id="workspace">
        <!-- 왼쪽 패널 -->
        <div id="objectSelector"></div>
        <!-- 중앙 패널 -->
        <div id="board">
            <div id="boardEditor">
                <div id="canvas"></div>
                <div id="stage"></div>
                <div id="engineContainer"></div>
            </div>
            <div id="propertyPanel"></div>
        </div>
        <!-- 오른쪽 패널 -->
        <div id="codeWrapper">
            <div id="blockMenu"></div>
            <div id="workspaceBoard"></div>
            <div id="targetSelector"></div>
        </div>
        <!-- 기타 요소 -->
        <div id="overlayBoard" class="entryOverlayBoard"></div>
        <div id="entryCategoryLayer"></div>
        <div id="entryBlockLayer"></div>
        <div id="entryAssembleBlock"></div>
        <div id="entryVariableContainer"></div>
        <div id="entryExtension"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Entry Tool 초기화 대기
            const checkEntryTool = setInterval(() => {
                if (typeof EntryTool !== 'undefined') {
                    clearInterval(checkEntryTool);
                    initializeEntry();
                }
            }, 100);

            function initializeEntry() {
                try {
                    // Entry 초기화
                    Entry.init(document.getElementById('workspace'), {
                        type: 'workspace',
                        textCodingEnable: true,
                        useCodeView: true,
                        block: {
                            category: true,
                            design: 'entry'
                        },
                        workspace: {
                            displayObjectView: true
                        }
                    });

                    // 프로젝트 파일이 있는 경우 로드
                    const projectFile = '<%= projectFile %>';
                    if (projectFile) {
                        fetch(projectFile)
                            .then(response => response.json())
                            .then(project => {
                                Entry.loadProject(project);
                                Entry.playground.changeViewMode('code');
                                Entry.start();
                            })
                            .catch(error => {
                                console.error('프로젝트 로드 실패:', error);
                                Entry.start();
                            });
                    } else {
                        Entry.loadProject();
                        Entry.start();
                    }

                    console.log('Entry 초기화 완료');
                } catch (error) {
                    console.error('Entry 초기화 오류:', error);
                    console.error('Error stack:', error.stack);
                }
            }
        });
    </script>
</body>
</html>