<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entry Editor</title>

    <!-- Entry CSS -->
    <link rel="stylesheet" href="/js/entry/entry.css">

    <!-- Core Dependencies -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/preloadjs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/easeljs.min.js"></script>
    <script src="https://code.createjs.com/1.0.0/soundjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <!-- Local Entry.js -->
    <script src="/js/entry/entry.min.js"></script>

    <style>
        html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        #workspace {
            width: 100%;
            height: 100%;
            position: relative;
        }
    </style>
</head>
<body>
    <div id="workspace">
        <!-- Entry 기본 구조 -->
        <div id="canvas"></div>
        <div id="engineContainer"></div>
        <div id="dataTable"></div>
        <div id="pictureView"></div>
        <div id="soundEditor"></div>
        <div id="container"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const initEntry = async () => {
                const projectFile = '<%= projectFile %>';
                
                try {
                    // Entry 네임스페이스 초기화 대기
                    if (!window.Entry || typeof window.Entry.createDom !== 'function') {
                        console.error('Entry namespace not properly initialized');
                        return;
                    }

                    // 기본 DOM 요소 생성
                    Entry.createDom();

                    // 작업 공간 생성
                    const workspace = new Entry.Workspace({
                        container: 'workspace',
                        type: 'workspace'
                    });

                    // 프로젝트 파일이 있는 경우 로드
                    if (projectFile) {
                        try {
                            const response = await fetch(projectFile);
                            const projectData = await response.json();
                            workspace.loadProject(projectData);
                        } catch (error) {
                            console.error('프로젝트 로드 실패:', error);
                        }
                    }

                    // Entry 시작
                    workspace.start();
                } catch (error) {
                    console.error('Entry 초기화 실패:', error);
                }
            };

            // Entry 초기화 시도
            initEntry();
        });
    </script>
</body>
</html>