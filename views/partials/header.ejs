<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">   
    <title>코딩앤플레이 - 쉽게 배우는 프로그래밍</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://apis.google.com/js/api.js"></script>

    <!-- 필요한 hidden input 요소 추가 -->
    <input type="hidden" id="googleApiKey" value="<%= process.env.GOOGLE_API_KEY %>">
    <input type="hidden" id="spreadsheetId" value="<%= process.env.SPREADSHEET_ID %>">
    <input type="hidden" id="discoveryDocs" value="<%= process.env.DISCOVERY_DOCS %>">
</head>

<header class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
    <div class="container-fluid">
        <a class="navbar-brand d-flex align-items-center" href="/">
            <img src="/resource/logo.png" alt="Logo" style="width: 40px; height: 40px;">
            <span class="ms-2" style="font-family: 'Noto Sans KR', sans-serif; font-weight: bold;">코딩앤플레이</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarContent">
            <form class="d-flex mx-auto" style="max-width: 400px;">
                <input class="form-control me-2" type="search" placeholder="Search..." aria-label="Search" style="font-size: 16px; padding: 8px;">
            </form>          
            <div class="d-flex align-items-center">
                <!-- 역할 권한 헬퍼 함수 -->
                <%
                function canAccess(feature) {
                    const permissions = require('../../lib_login/permissions');
                    return permissions.hasFeatureAccess(locals.role, feature);
                }
                %>
                <% if (typeof role !== 'undefined' && role === 'admin') { %>
                    <a href="/admin" class="text-decoration-none me-3">
                        <span class="text-primary">admin</span>
                    </a>
                    <a href="/teacher" class="text-decoration-none me-3">
                        <span class="text-primary">teacher</span>
                    </a>
                <% } %> 
                <% if (typeof role !== 'undefined' && role === 'manager') { %>
                    <a href="/teacher" class="text-decoration-none me-3">
                        <span class="text-primary">teacher</span>
                    </a>
                <% } %> 
                <% if (typeof role !== 'undefined' && role === 'student') { %>
                    <a href="/" class="text-decoration-none me-3">
                        <span class="text-primary">student</span>
                    </a>
                <% } %> 

                <!-- 다크 모드 토글 버튼 -->
                <i id="toggle-dark-mode" class="bi bi-brightness-high me-3"></i>

                <!-- 알림 아이콘 (새 글이 있으면 New 배지 표시) -->
                <div class="position-relative me-3">
                    <i id="notification-icon" class="bi bi-bell" style="font-size: 2rem; cursor: pointer;"></i>
                    <span id="notification-badge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" style="display: none;">
                        New
                    </span>
                </div>

                <!-- 메시지 아이콘 (메시지 화면으로 이동) -->
                <i id="app-drawer-button" class="bi bi-chat me-3" style="font-size: 2rem; cursor: pointer;"></i>

                <!-- 프로필 아이콘 -->
                <img src="/resource/co.ico" alt="Profile" id="profileIcon" class="rounded-circle" style="width: 40px; height: 40px;">
                <span id="userName" class="ms-2"></span>

                <!-- 로그아웃 버튼 -->
                <button id="logoutButton" class="btn btn-outline-secondary ms-2" style="font-size: 16px; padding: 8px 12px;">로그아웃</button>
            </div>
        </div>
    </div>
</header>

<!-- 스크립트 부분 -->
<script defer src="/header.js"></script>
<script>
    // 메시지 화면으로 이동
    document.getElementById('app-drawer-button').addEventListener('click', function() {
        window.location.href = '/messages';  // 메시지 화면으로 이동
    });

    // 알림 배지 표시 처리 (새 글이 있으면 표시)
    function checkForNewPosts() {
        fetch('/board/check-new-posts')  // 서버에서 새 글 여부 확인 API 호출
            .then(response => response.json())
            .then(data => {
                if (data.newPosts) {
                    document.getElementById('notification-badge').style.display = 'block';
                } else {
                    document.getElementById('notification-badge').style.display = 'none';
                }
            });
    }

    // 페이지 로드 시 새 글 여부 확인
    checkForNewPosts();
    document.addEventListener('mousemove', resetIdleTimer);
    document.addEventListener('keypress', resetIdleTimer);

    // 다크 모드/라이트 모드 전환
    const darkModeToggle = document.getElementById('toggle-dark-mode');
    darkModeToggle.addEventListener('click', function() {
        document.body.classList.toggle('dark-mode');
        darkModeToggle.classList.toggle('bi-brightness-high');
        darkModeToggle.classList.toggle('bi-moon');
    });
    

    // 비활동 시간 확인 및 로그아웃 처리
    let idleTime = 0;
    function resetIdleTimer() {
        idleTime = 0;
    }
    function checkIdleTime() {
        idleTime += 1;
        if (idleTime >= 30) { // 30분 동안 활동이 없으면 로그아웃
            alert("일정시간동안 활동이 없어, 로그아웃되었습니다.");
            window.location.href = '/logout';
        }
    }
    setInterval(checkIdleTime, 60 * 1000); // 1분 간격으로 체크



</script>
