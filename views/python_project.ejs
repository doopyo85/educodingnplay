<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>코딩앤플레이 - 쉽게 배우는 프로그래밍</title>

    <script src="/js/learning-tracker.js"></script>
    <script src="https://apis.google.com/js/api.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/test_frame.css">
    <link rel="stylesheet" href="/css/test_problem.css">
    <link rel="stylesheet" href="/css/test_ide.css">
    <link rel="stylesheet" href="/css/ide-toggle-style.css">

    <!-- Ace Editor -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.8/ace.js"></script>
</head>
<body>
    <%- include('partials/header') %>

    <div class="main-container">
        <nav class="nav-container">
            <ul id="navList" class="list-unstyled"></ul>
        </nav>

        <div class="contents">
            <div class="content-container">
                <div id="problem-navigation-container">
                    <i class="bi bi-chevron-left" id="prev-problem"></i>
                    <div id="problem-navigation"></div>
                    <i class="bi bi-chevron-right" id="next-problem"></i>
                </div>
                <div id="problem-title"></div>
                <div id="problem-container">
                    <iframe id="iframeContent" src="about:blank"></iframe>
                </div>
            </div>

            <div class="ide-container">
                <div class="editor-toggle-controls">
                    <button id="toggleEditor" class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-arrows-angle-expand"></i>
                    </button>
                </div>
                <div class="theme-buttons">
                    <button onclick="changeTheme('monokai')">Monokai</button>
                    <button onclick="changeTheme('github')">GitHub</button>
                    <button onclick="changeTheme('tomorrow_night')">Tomorrow Night</button>
                </div>
                <div id="editor" class="code-editor"></div>
                <button id="runCodeBtn">실행</button>
                <button id="saveCodeBtn">저장</button>
                <button id="resetCodeBtn">초기화</button>
                <div id="output-terminal">
                    <pre id="output-content"></pre>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="python_project.js"></script>

    <script>
        var editor = ace.edit("editor");
        editor.session.setMode("ace/mode/python");
        editor.setTheme("ace/theme/tomorrow_night_bright");

        function changeTheme(themeName) {
            editor.setTheme("ace/theme/" + themeName);
        }

        document.getElementById("runCodeBtn").addEventListener("click", function() {
            var code = editor.getValue();
            fetch('/run-python', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ code: code }),
            })
            .then(response => response.json())
            .then(data => { document.getElementById("output-content").textContent = data.output; })
            .catch(error => { document.getElementById("output-content").textContent = "오류 발생: " + error; });
        });

        document.getElementById("resetCodeBtn").addEventListener("click", function() {
            editor.setValue("# 여기에 코드를 입력하세요...");
        });

        document.getElementById("saveCodeBtn").addEventListener("click", function() {
            alert("코드가 저장되었습니다.");
        });

        document.addEventListener('DOMContentLoaded', function() {
            initEditorToggle();
            loadMenuData();
        });

        function initEditorToggle() {
            const toggleBtn = document.getElementById('toggleEditor');
            const contentsDiv = document.querySelector('.contents');

            if (!toggleBtn || !contentsDiv) return;

            let isExpanded = false;
            toggleBtn.addEventListener('click', function() {
                isExpanded = !isExpanded;
                const ideContainer = document.querySelector('.ide-container');
                const contentContainer = document.querySelector('.content-container');

                if (isExpanded) {
                    ideContainer.style.width = '45%';
                    contentContainer.style.width = '45%';
                    toggleBtn.innerHTML = '<i class="bi bi-arrows-angle-contract"></i>';
                } else {
                    ideContainer.style.width = '40px';
                    contentContainer.style.width = '90%';
                    toggleBtn.innerHTML = '<i class="bi bi-arrows-angle-expand"></i>';
                }

                setTimeout(() => {
                    var editor = ace.edit("editor");
                    if (editor) editor.resize();
                }, 300);
            });
        }

        async function loadMenuData() {
            try {
                const response = await fetch('/api/get-menu-data');
                const menuData = await response.json();
                if (menuData && menuData.length > 0) {
                    renderMenu(menuData);
                } else {
                    throw new Error('No menu data loaded');
                }
            } catch (error) {
                console.error('Error loading menu data:', error);
            }
        }

        function renderMenu(data) {
            const navList = document.getElementById('navList');
            if (!navList) return;

            navList.innerHTML = '';
            if (!data || !Array.isArray(data) || data.length === 0) {
                console.error('Invalid menu data');
                return;
            }

            data.forEach(row => {
                if (row.length >= 3) {
                    const [topLevelMenu, subMenu, examName] = row;
                    const menuItem = document.createElement('li');
                    menuItem.textContent = `${topLevelMenu} - ${subMenu}`;
                    menuItem.addEventListener('click', () => onMenuSelect(examName));
                    navList.appendChild(menuItem);
                }
            });
        }

        function onMenuSelect(examName) {
            console.log('Selected exam:', examName);
        }
    </script>
</body>
</html>
