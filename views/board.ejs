<!-- views/board.ejs -->
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>코딩앤플레이 - 게시판</title>
    <!-- 부트스트랩 및 스타일시트 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/board.css" rel="stylesheet">
</head>
<body>
    <%- include('partials/header') %>

    <div class="container mt-4 mb-5">
        <div class="row">
            <div class="col-lg-8 mx-auto">
                <!-- 게시판 제목 -->
                <h2 class="text-center mb-4">공지사항</h2>
                
                <!-- 채팅 컨테이너 -->
                <div class="direct-message">
                    <!-- 메시지 목록 (스크롤 가능) -->
                    <div class="messages">
                        <% 
                        // 메시지 목록을 부모-자식 관계로 재구성
                        const messageGroups = {};
                        const topLevelMessages = [];
                        
                        if (messages && messages.length > 0) {
                            // 부모-자식 관계 매핑
                            messages.forEach(message => {
                                // 각 메시지의 ID를 키로 하는 배열 생성
                                if (!messageGroups[message.id]) {
                                    messageGroups[message.id] = [];
                                }
                                
                                if (message.parentId) {
                                    // 부모 메시지가 있으면 해당 배열에 추가
                                    if (!messageGroups[message.parentId]) {
                                        messageGroups[message.parentId] = [];
                                    }
                                    messageGroups[message.parentId].push(message);
                                } else {
                                    // 최상위 메시지는 별도 배열에 추가
                                    topLevelMessages.push(message);
                                }
                            });
                            
                            // 최상위 메시지를 날짜순으로 정렬
                            topLevelMessages.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));
                        }
                        
                        // 메시지 및 해당 답글 렌더링 함수
                        function renderMessageWithReplies(message, isReply = false) {
                            const messageDate = new Date(message.createdAt);
                            const formattedDate = `${messageDate.getFullYear()}-${(messageDate.getMonth()+1).toString().padStart(2, '0')}-${messageDate.getDate().toString().padStart(2, '0')} ${messageDate.getHours().toString().padStart(2, '0')}:${messageDate.getMinutes().toString().padStart(2, '0')}`;
                        %>
                            <div class="message-container <%= isReply ? 'reply' : '' %>" data-id="<%= message.id %>">
                                <!-- 프로필 이미지 -->
                                <div class="profile-wrapper">
                                    <img class="favicon" src="/image/favicon.png" alt="프로필">
                                </div>
                                
                                <!-- 메시지 내용 -->
                                <div class="message-content">
                                    <div class="message-header">
                                        <span class="user-id"><%= message.userID %></span>
                                        <span class="message-time"><%= formattedDate %></span>
                                    </div>
                                    
                                    <!-- 말풍선 -->
                                    <div class="message-bubble">
                                        <% if (isReply && message.parentMessageContent) { %>
                                        <div class="reply-reference">
                                            <span class="reference-user"><%= message.parentMessageUser %>:</span>
                                            <span class="reference-text"><%= 
                                            message.parentMessageContent.length > 15 
                                                ? message.parentMessageContent.substring(0, 15) + '...' 
                                                : message.parentMessageContent 
                                            %></span>
                                        </div>
                                        <% } %>
                                        
                                        <div class="message-text"><%= message.title %></div>
                                        
                                        <!-- 액션 버튼 (삭제, 답글) -->
                                        <div class="message-actions">
                                            <a href="/board/reply/<%= message.id %>" class="reply-btn" title="답글 작성">→</a>
                                            <% if (userID === message.userID || role === 'admin') { %>
                                            <a href="/board/delete/<%= message.id %>" class="delete-btn" title="삭제">×</a>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <% 
                            // 이 메시지에 대한 답글 렌더링
                            const replies = messageGroups[message.id] || [];
                            replies.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));
                            
                            replies.forEach(reply => {
                                // 답글 정보 설정
                                reply.parentMessageUser = message.userID;
                                reply.parentMessageContent = message.title;
                                
                                // 답글 렌더링 (재귀 호출, 깊이 제한 없음)
                                renderMessageWithReplies(reply, true);
                            });
                        }
                        
                        // 메시지가 없을 경우
                        if (!topLevelMessages || topLevelMessages.length === 0) {
                        %>
                            <div class="text-center py-5 text-muted">
                                <p>아직 게시글이 없습니다.</p>
                                <p>첫 게시글을 작성해보세요!</p>
                            </div>
                        <% 
                        } else {
                            // 모든 최상위 메시지와 해당 답글 렌더링
                            topLevelMessages.forEach(message => {
                                renderMessageWithReplies(message);
                            });
                        }
                        %>
                    </div>
                    
                    <!-- 메시지 입력창 -->
                    <div class="new">
                        <!-- 답글 정보 표시 영역 (기본적으로 숨김) -->
                        <div id="reply-info" class="reply-info d-none">
                            <span class="reply-to-label">답글:</span>
                            <span id="reply-to-preview" class="reply-to-preview"></span>
                            <span id="cancel-reply" class="cancel-reply">취소</span>
                        </div>
                        
                        <!-- 입력 영역 -->
                        <div class="input-area">
                            <input type="text" id="chat-input" class="new-input" placeholder="메시지를 입력하세요...">
                            <button id="send-btn" class="material-button">전송</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('partials/footer') %>
    
    <!-- 자바스크립트 -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/board.js"></script>
</body>
</html>